import json
import os

TASKS_FILE = "tasks.json"

def load_tasks():
    if os.path.exists(TASKS_FILE):
        with open(TASKS_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    else:
        return {"tasks": []}

def save_tasks(tasks_data):
    with open(TASKS_FILE, "w", encoding="utf-8") as f:
        json.dump(tasks_data, f, indent=4, ensure_ascii=False)

def process_tasks():
    tasks_data = load_tasks()
    changed = False

    for task in tasks_data.get("tasks", []):
        if task.get("status") != "pending":
            continue  # فقط پردازش تسک‌های معلق

        file_path = task.get("file")
        action = task.get("action")
        content = task.get("content", "")
        try:
            if action == "edit" or action == "add":
                # بازنویسی یا ایجاد فایل با محتوای داده شده
                with open(file_path, "w", encoding="utf-8") as f:
                    f.write(content)
                task["status"] = "done"
                print(f"فایل {file_path} با موفقیت {action} شد.")
                changed = True

            elif action == "delete":
                if os.path.exists(file_path):
                    os.remove(file_path)
                    task["status"] = "done"
                    print(f"فایل {file_path} حذف شد.")
                    changed = True
                else:
                    task["status"] = "failed"
                    print(f"فایل {file_path} برای حذف یافت نشد.")

            else:
                task["status"] = "failed"
                print(f"عملیات {action} برای فایل {file_path} تعریف نشده است.")

        except Exception as e:
            task["status"] = "failed"
            print(f"خطا در انجام عملیات روی فایل {file_path}: {e}")

    if changed:
        tasks_data["last_updated"] = datetime.utcnow().isoformat()
        save_tasks(tasks_data)
    else:
        print("هیچ تغییری در تسک‌ها انجام نشد.")

if __name__ == "__main__":
    from datetime import datetime
    process_tasks()
